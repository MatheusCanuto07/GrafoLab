Parte 1
Representação

Representação de grafos utilizando Matriz de Adjacência
Representação de grafos utilizando Matriz de Incidência
Representação de grafos utilizando Lista de Adjacência - Feito

Parte 2
Funções básicas para manipulação de grafos em ambas representações, incluindo:

Criação de um grafo com X vértices (o número de vértices deve ser inserido pelo usuário) - Feito
Criação e remoção de arestas - Feito
Ponderação e rotulação de vértices
Ponderação e rotulação de arestas
Checagem de adjacência entre vértices
Checagem de adjacência entre arestas
Checagem da existência de arestas
Checagem da quantidade de vértices e arestas
Checagem de grafo vazio e completo
Checagem de conectividade em simplismente conexo, semi-fortemente conexo e fortemente conexo
Checagem de quantidade de componentes fortemente conexos com Kosaraju
Checagem de ponte e articulação

Parte 3
Uma ponte em um grafo é definido como uma aresta cuja remoção desconectado o grafo. O problema de se determinar pontes existentes em um grafo apresenta várias aplicações, dentre elas encontrar caminhos (ou ciclos) eulerianos. Na segunda etapa deste trabalho você deverá  implementar dois métodos para identificação de pontes: (i) método naive em que testa-se a conectividade de um grafo para cada remoção de aresta (utilizando uma busca em largura ou profundidade por exemplo) e (ii) método baseado em Tarjan (artigo em anexo). Após implementadas as duas soluções para detecção de pontes, você deverá encontrar um caminho euleriano, usando Algoritmo de Fleury, em um grafo euleriano usando as duas estratégias implementadas. Ilustre os tempos computacionais necessários para as duas estratégias utilizando como teste grafos aleatórios simples contendo 100, 1000, 10000 e 100000 vértices.

Parte 4
Após terminadas as entregas 1 e 2, implementar a funcionalidade de ler e salvar os grafos em arquivos, em um dos tipos suportados pelo software de vizualização de grafos Gephi. Os formatos suportados são: GEXF, GDF, GML, GraphML, Pajek NET, GraphViz DOT, CSV, UCINET DL, Tulip TPL, Netdraw VNA, Spreadsheet. A documentação de cada formato pode ser encontrada em: https://gephi.org/users/supported-graph-formats/
Com a nova funcionalidade de exportação de grafos criados em sua ferramenta, gerar as ilustrações de exemplo presentes na documentação utilizando a ferramenta Gephi.

